{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { client } from \"../../../index\";\nimport { setSingleAnswer } from \"../answer/answerSlice\";\nimport { BookMarkAnswer, CREATE_ANSWER } from \"../../../graphql/answer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport function useCreateAnswer() {\n  _s();\n  const dispatch = useDispatch();\n  const createAnswer = async answerInput => {\n    try {\n      const res = await client.mutate({\n        mutation: CREATE_ANSWER,\n        context: {\n          headers: {\n            authorization: `${localStorage.getItem(\"token\")}`\n          }\n        },\n        variables: {\n          answerInput: answerInput\n        }\n      });\n      if (res) {\n        dispatch(setSingleAnswer(res));\n        toast.success(\"Answer Created Successfully!\", {\n          position: toast.POSITION.TOP_RIGHT\n        });\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n  return {\n    createAnswer\n  };\n}\n_s(useCreateAnswer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport function useBookMarkAnswer() {\n  _s2();\n  const dispatch = useDispatch();\n  const bookmark = async (answerId, userId) => {\n    try {\n      const res = await client.mutate({\n        mutation: BookMarkAnswer,\n        variables: {\n          updateBookmarkedAnswerAnswerId2: answerId,\n          updateBookmarkedAnswerUserId2: userId\n        },\n        context: {\n          headers: {\n            authorization: `${localStorage.getItem(\"token\")}`\n          }\n        }\n      });\n      if (res) {\n        // dispatch(setIsBookMark(res?.data?.updateBookmarkedQuestion));\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n  return {\n    bookmark\n  };\n}\n_s2(useBookMarkAnswer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","client","setSingleAnswer","BookMarkAnswer","CREATE_ANSWER","toast","useCreateAnswer","_s","dispatch","createAnswer","answerInput","res","mutate","mutation","context","headers","authorization","localStorage","getItem","variables","success","position","POSITION","TOP_RIGHT","error","message","useBookMarkAnswer","_s2","bookmark","answerId","userId","updateBookmarkedAnswerAnswerId2","updateBookmarkedAnswerUserId2"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/redux/features/answer/answerAction.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { client } from \"../../../index\";\nimport { setSingleAnswer } from \"../answer/answerSlice\";\nimport { BookMarkAnswer, CREATE_ANSWER } from \"../../../graphql/answer\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport function useCreateAnswer() {\n  const dispatch = useDispatch();\n  const createAnswer = async (answerInput) => {\n    try {\n      const res = await client.mutate({\n        mutation: CREATE_ANSWER,\n        context: {\n          headers: {\n            authorization: `${localStorage.getItem(\"token\")}`,\n          },\n        },\n        variables: { answerInput: answerInput },\n      });\n      if (res) {\n        dispatch(setSingleAnswer(res));\n        toast.success(\"Answer Created Successfully!\", {\n          position: toast.POSITION.TOP_RIGHT,\n        });\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  };\n  return { createAnswer };\n}\n\nexport function useBookMarkAnswer() {\n  const dispatch = useDispatch();\n  const bookmark = async (answerId, userId) => {\n    try {\n      const res = await client.mutate({\n        mutation: BookMarkAnswer,\n        variables: {\n          updateBookmarkedAnswerAnswerId2: answerId,\n          updateBookmarkedAnswerUserId2: userId,\n        },\n        context: {\n          headers: {\n            authorization: `${localStorage.getItem(\"token\")}`,\n          },\n        },\n      });\n      if (res) {\n        // dispatch(setIsBookMark(res?.data?.updateBookmarkedQuestion));\n      }\n    } catch (error) {\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  };\n  return { bookmark };\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,eAAe,QAAQ,uBAAuB;AACvD,SAASC,cAAc,EAAEC,aAAa,QAAQ,yBAAyB;AACvE,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAE9C,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAG,MAAOC,WAAW,IAAK;IAC1C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMV,MAAM,CAACW,MAAM,CAAC;QAC9BC,QAAQ,EAAET,aAAa;QACvBU,OAAO,EAAE;UACPC,OAAO,EAAE;YACPC,aAAa,EAAG,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;UAClD;QACF,CAAC;QACDC,SAAS,EAAE;UAAET,WAAW,EAAEA;QAAY;MACxC,CAAC,CAAC;MACF,IAAIC,GAAG,EAAE;QACPH,QAAQ,CAACN,eAAe,CAACS,GAAG,CAAC,CAAC;QAC9BN,KAAK,CAACe,OAAO,CAAC,8BAA8B,EAAE;UAC5CC,QAAQ,EAAEhB,KAAK,CAACiB,QAAQ,CAACC;QAC3B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdnB,KAAK,CAACmB,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;QACzBJ,QAAQ,EAAEhB,KAAK,CAACiB,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAO;IAAEd;EAAa,CAAC;AACzB;AAACF,EAAA,CA1BeD,eAAe;EAAA,QACZN,WAAW;AAAA;AA2B9B,OAAO,SAAS0B,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAMnB,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM4B,QAAQ,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,MAAM,KAAK;IAC3C,IAAI;MACF,MAAMnB,GAAG,GAAG,MAAMV,MAAM,CAACW,MAAM,CAAC;QAC9BC,QAAQ,EAAEV,cAAc;QACxBgB,SAAS,EAAE;UACTY,+BAA+B,EAAEF,QAAQ;UACzCG,6BAA6B,EAAEF;QACjC,CAAC;QACDhB,OAAO,EAAE;UACPC,OAAO,EAAE;YACPC,aAAa,EAAG,GAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;UAClD;QACF;MACF,CAAC,CAAC;MACF,IAAIP,GAAG,EAAE;QACP;MAAA;IAEJ,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdnB,KAAK,CAACmB,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;QACzBJ,QAAQ,EAAEhB,KAAK,CAACiB,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAO;IAAEK;EAAS,CAAC;AACrB;AAACD,GAAA,CA1BeD,iBAAiB;EAAA,QACd1B,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}