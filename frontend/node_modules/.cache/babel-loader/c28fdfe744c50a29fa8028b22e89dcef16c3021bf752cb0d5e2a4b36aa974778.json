{"ast":null,"code":"import { gql } from \"@apollo/client\";\nexport const GET_ALL_TAGS = gql`\n  query GetAllTag {\n    getAllTag {\n      TagName\n      body\n      _id\n      question {\n        _id\n      }\n    }\n  }\n`;\nexport const GET_SINGLE_TAG = gql`\n  mutation GetSingleTag($id: ID!) {\n    getSingleTag(_id: $id) {\n      ... on TagSuccess {\n        message\n        tag {\n          TagName\n          body\n          _id\n          question {\n            _id\n            title\n            body\n            createdAt\n            userId {\n              avatarImage\n              name\n            }\n            upvote {\n              _id\n            }\n            downvote {\n              _id\n            }\n            answers {\n              _id\n            }\n            view {\n              _id\n            }\n            tags {\n              _id\n              TagName\n            }\n          }\n        }\n      }\n      ... on TagFailure {\n        message\n        args\n      }\n    }\n  }\n`;\nexport const GET_TOP_TAGS = gql`\n  query GetAllTopTag {\n    getAllTopTag {\n      _id\n      TagName\n      question {\n        _id\n      }\n    }\n  }\n`;\nexport const CREATE_TAG = gql`\n  mutation CreateTag($TagName: String!) {\n    createTag(TagName: $TagName) {\n      ... on TagSuccess {\n        message\n        tag {\n          TagName\n          body\n          _id\n          question {\n            _id\n          }\n        }\n      }\n\n      ... on TagFailure {\n        message\n        args\n      }\n    }\n  }\n`;","map":{"version":3,"names":["gql","GET_ALL_TAGS","GET_SINGLE_TAG","GET_TOP_TAGS","CREATE_TAG"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/graphql/tags.js"],"sourcesContent":["import { gql } from \"@apollo/client\";\n\nexport const GET_ALL_TAGS = gql`\n  query GetAllTag {\n    getAllTag {\n      TagName\n      body\n      _id\n      question {\n        _id\n      }\n    }\n  }\n`;\n\nexport const GET_SINGLE_TAG = gql`\n  mutation GetSingleTag($id: ID!) {\n    getSingleTag(_id: $id) {\n      ... on TagSuccess {\n        message\n        tag {\n          TagName\n          body\n          _id\n          question {\n            _id\n            title\n            body\n            createdAt\n            userId {\n              avatarImage\n              name\n            }\n            upvote {\n              _id\n            }\n            downvote {\n              _id\n            }\n            answers {\n              _id\n            }\n            view {\n              _id\n            }\n            tags {\n              _id\n              TagName\n            }\n          }\n        }\n      }\n      ... on TagFailure {\n        message\n        args\n      }\n    }\n  }\n`;\n\nexport const GET_TOP_TAGS = gql`\n  query GetAllTopTag {\n    getAllTopTag {\n      _id\n      TagName\n      question {\n        _id\n      }\n    }\n  }\n`;\n\nexport const CREATE_TAG = gql`\n  mutation CreateTag($TagName: String!) {\n    createTag(TagName: $TagName) {\n      ... on TagSuccess {\n        message\n        tag {\n          TagName\n          body\n          _id\n          question {\n            _id\n          }\n        }\n      }\n\n      ... on TagFailure {\n        message\n        args\n      }\n    }\n  }\n`;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,gBAAgB;AAEpC,OAAO,MAAMC,YAAY,GAAGD,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAME,cAAc,GAAGF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGH,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,UAAU,GAAGJ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}