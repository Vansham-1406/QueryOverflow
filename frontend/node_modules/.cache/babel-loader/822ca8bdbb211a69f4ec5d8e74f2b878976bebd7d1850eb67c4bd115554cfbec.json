{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch } from 'react-redux';\nimport { client } from '../../../index';\nimport { setSingleAnswer } from '../answer/answerSlice';\nimport { CREATE_ANSWER } from '../../../graphql/answer';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport function useCreateAnswer() {\n  _s();\n  const dispatch = useDispatch();\n  const createAnswer = async answerInput => {\n    console.log('answerInput', answerInput);\n    // try \n    // {\n    //     const res = await client.mutate({\n    //         mutation : CREATE_ANSWER,\n    //         context: {\n    //             headers: {\n    //                 authorization: `${localStorage.getItem(\"token\")}`,\n    //             },\n    //         },\n    //         variables : {answerInput : answerInput},\n    //     })\n    //     if(res)\n    //     {\n    //         dispatch(setSingleAnswer(res));\n    //     }\n    // } \n    // catch (error) \n    // {\n    //     toast.error(error.message, {\n    //         position: toast.POSITION.TOP_RIGHT,\n    //       });\n    // }\n  };\n\n  return {\n    createAnswer\n  };\n}\n_s(useCreateAnswer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","client","setSingleAnswer","CREATE_ANSWER","toast","useCreateAnswer","_s","dispatch","createAnswer","answerInput","console","log"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/redux/features/answer/answerAction.js"],"sourcesContent":["import {useDispatch} from 'react-redux';\nimport {client} from '../../../index'\nimport {setSingleAnswer} from '../answer/answerSlice'\nimport {CREATE_ANSWER} from '../../../graphql/answer'\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport function useCreateAnswer(){\n    const dispatch = useDispatch();\n    const createAnswer = async (answerInput) => {\n        console.log('answerInput', answerInput)\n        // try \n        // {\n        //     const res = await client.mutate({\n        //         mutation : CREATE_ANSWER,\n        //         context: {\n        //             headers: {\n        //                 authorization: `${localStorage.getItem(\"token\")}`,\n        //             },\n        //         },\n        //         variables : {answerInput : answerInput},\n        //     })\n        //     if(res)\n        //     {\n        //         dispatch(setSingleAnswer(res));\n        //     }\n        // } \n        // catch (error) \n        // {\n        //     toast.error(error.message, {\n        //         position: toast.POSITION.TOP_RIGHT,\n        //       });\n        // }\n\n    }\n    return {createAnswer}\n} "],"mappings":";AAAA,SAAQA,WAAW,QAAO,aAAa;AACvC,SAAQC,MAAM,QAAO,gBAAgB;AACrC,SAAQC,eAAe,QAAO,uBAAuB;AACrD,SAAQC,aAAa,QAAO,yBAAyB;AACrD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAE9C,OAAO,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,YAAY,GAAG,MAAOC,WAAW,IAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,WAAW,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAEJ,CAAC;;EACD,OAAO;IAACD;EAAY,CAAC;AACzB;AAACF,EAAA,CA7BeD,eAAe;EAAA,QACVL,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}