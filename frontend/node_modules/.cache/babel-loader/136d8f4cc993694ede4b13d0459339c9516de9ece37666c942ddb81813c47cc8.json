{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  AllQuestion: [],\n  singlequestion: {},\n  loading: false,\n  isupvote: false,\n  isdownvote: false\n};\nconst questionSlice = createSlice({\n  name: \"Question\",\n  initialState,\n  reducers: {\n    setAllQuestion(state, action) {\n      state.AllQuestion = action.payload;\n    },\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    setSingleQuestion(state, action) {\n      state.singlequestion = action.payload;\n    },\n    setUpVote(state, action) {\n      state.isupvote = action.payload;\n    },\n    setDownVote(state, action) {\n      state.isdownvote = action.payload;\n    }\n  }\n});\nexport default questionSlice.reducer;\nexport const {\n  setAllQuestion,\n  setLoading,\n  setSingleQuestion\n} = questionSlice.actions;","map":{"version":3,"names":["createSlice","initialState","AllQuestion","singlequestion","loading","isupvote","isdownvote","questionSlice","name","reducers","setAllQuestion","state","action","payload","setLoading","setSingleQuestion","setUpVote","setDownVote","reducer","actions"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/redux/features/question/questionSlice.js"],"sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\n\nconst initialState = {\n    AllQuestion : [],\n    singlequestion : {},\n    loading : false,\n    isupvote : false,\n    isdownvote : false\n}\n\nconst questionSlice = createSlice({\n    name : \"Question\",\n    initialState,\n    reducers : {\n        setAllQuestion(state,action)\n        {\n            state.AllQuestion = action.payload;\n        },\n        setLoading(state,action)\n        {\n            state.loading = action.payload;\n        },\n        setSingleQuestion(state,action)\n        {\n            state.singlequestion = action.payload;\n        },\n        setUpVote(state,action)\n        {\n            state.isupvote = action.payload;\n        },\n        setDownVote(state,action)\n        {\n            state.isdownvote = action.payload;\n        }\n    }\n})\n\nexport default questionSlice.reducer;\nexport const {setAllQuestion,setLoading,setSingleQuestion} = questionSlice.actions;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAG,EAAE;EAChBC,cAAc,EAAG,CAAC,CAAC;EACnBC,OAAO,EAAG,KAAK;EACfC,QAAQ,EAAG,KAAK;EAChBC,UAAU,EAAG;AACjB,CAAC;AAED,MAAMC,aAAa,GAAGP,WAAW,CAAC;EAC9BQ,IAAI,EAAG,UAAU;EACjBP,YAAY;EACZQ,QAAQ,EAAG;IACPC,cAAcA,CAACC,KAAK,EAACC,MAAM,EAC3B;MACID,KAAK,CAACT,WAAW,GAAGU,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,UAAUA,CAACH,KAAK,EAACC,MAAM,EACvB;MACID,KAAK,CAACP,OAAO,GAAGQ,MAAM,CAACC,OAAO;IAClC,CAAC;IACDE,iBAAiBA,CAACJ,KAAK,EAACC,MAAM,EAC9B;MACID,KAAK,CAACR,cAAc,GAAGS,MAAM,CAACC,OAAO;IACzC,CAAC;IACDG,SAASA,CAACL,KAAK,EAACC,MAAM,EACtB;MACID,KAAK,CAACN,QAAQ,GAAGO,MAAM,CAACC,OAAO;IACnC,CAAC;IACDI,WAAWA,CAACN,KAAK,EAACC,MAAM,EACxB;MACID,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;IACrC;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,aAAa,CAACW,OAAO;AACpC,OAAO,MAAM;EAACR,cAAc;EAACI,UAAU;EAACC;AAAiB,CAAC,GAAGR,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}