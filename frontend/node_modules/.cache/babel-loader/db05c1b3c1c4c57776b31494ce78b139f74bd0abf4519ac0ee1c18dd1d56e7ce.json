{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useDispatch } from \"react-redux\";\nimport { client } from \"../../../../src/index\";\nimport { setAllQuestion, setLoading, setSingleQuestion } from \"../question/questionSlice\";\nimport { GET_ALL_QUESTION, GET_SINGLE_QUESTION } from \"../../../graphql/question\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nexport function useGetSingleQuestion() {\n  _s();\n  const dispatch = useDispatch();\n  const getSingleQuestion = async question => {\n    try {\n      dispatch(setLoading(true));\n      const res = await client.mutate({\n        mutation: GET_SINGLE_QUESTION,\n        variables: {\n          question\n        }\n      });\n      dispatch(setLoading(false));\n      if (res) {\n        var _res$data, _res$data$getSingleQu;\n        dispatch(setSingleQuestion(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$getSingleQu = _res$data.getSingleQuestion) === null || _res$data$getSingleQu === void 0 ? void 0 : _res$data$getSingleQu.question));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n  return {\n    getSingleQuestion\n  };\n}\n_s(useGetSingleQuestion, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\nexport function useGetAllQuestion() {\n  _s2();\n  const dispatch = useDispatch();\n  const getAllFunction = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await client.query({\n        query: GET_ALL_QUESTION\n      });\n      dispatch(setLoading(false));\n      if (res) {\n        var _res$data2;\n        dispatch(setAllQuestion(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.getAllQuestion));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT\n      });\n    }\n  };\n  return {\n    getAllFunction\n  };\n}\n_s2(useGetAllQuestion, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});","map":{"version":3,"names":["useDispatch","client","setAllQuestion","setLoading","setSingleQuestion","GET_ALL_QUESTION","GET_SINGLE_QUESTION","toast","useGetSingleQuestion","_s","dispatch","getSingleQuestion","question","res","mutate","mutation","variables","_res$data","_res$data$getSingleQu","data","error","message","position","POSITION","TOP_RIGHT","useGetAllQuestion","_s2","getAllFunction","query","_res$data2","getAllQuestion"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/redux/features/question/questionAction.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { client } from \"../../../../src/index\";\nimport { setAllQuestion, setLoading, setSingleQuestion } from \"../question/questionSlice\";\nimport { GET_ALL_QUESTION, GET_SINGLE_QUESTION } from \"../../../graphql/question\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n\nexport function useGetSingleQuestion()\n{\n  const dispatch = useDispatch();\n  const getSingleQuestion = async (question) => {\n    try \n    {\n      dispatch(setLoading(true));\n      const res = await client.mutate({\n        mutation : GET_SINGLE_QUESTION,\n        variables : {question}\n      })\n\n      dispatch(setLoading(false));\n      if(res)\n      {\n        dispatch(setSingleQuestion(res?.data?.getSingleQuestion?.question));\n      }\n    } \n    catch (error) \n    {\n      dispatch(setLoading(false));\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  }\n  return {getSingleQuestion};\n}\n\nexport function useGetAllQuestion() {\n  const dispatch = useDispatch();\n  const getAllFunction = async () => {\n    try {\n      dispatch(setLoading(true));\n      const res = await client.query({\n        query: GET_ALL_QUESTION,\n      });\n\n      dispatch(setLoading(false));\n      if (res) {\n        dispatch(setAllQuestion(res?.data?.getAllQuestion));\n      }\n    } catch (error) {\n      dispatch(setLoading(false));\n      toast.error(error.message, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n    }\n  };\n  return { getAllFunction };\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,cAAc,EAAEC,UAAU,EAAEC,iBAAiB,QAAQ,2BAA2B;AACzF,SAASC,gBAAgB,EAAEC,mBAAmB,QAAQ,2BAA2B;AACjF,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAG9C,OAAO,SAASC,oBAAoBA,CAAA,EACpC;EAAAC,EAAA;EACE,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,iBAAiB,GAAG,MAAOC,QAAQ,IAAK;IAC5C,IACA;MACEF,QAAQ,CAACP,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1B,MAAMU,GAAG,GAAG,MAAMZ,MAAM,CAACa,MAAM,CAAC;QAC9BC,QAAQ,EAAGT,mBAAmB;QAC9BU,SAAS,EAAG;UAACJ;QAAQ;MACvB,CAAC,CAAC;MAEFF,QAAQ,CAACP,UAAU,CAAC,KAAK,CAAC,CAAC;MAC3B,IAAGU,GAAG,EACN;QAAA,IAAAI,SAAA,EAAAC,qBAAA;QACER,QAAQ,CAACN,iBAAiB,CAACS,GAAG,aAAHA,GAAG,wBAAAI,SAAA,GAAHJ,GAAG,CAAEM,IAAI,cAAAF,SAAA,wBAAAC,qBAAA,GAATD,SAAA,CAAWN,iBAAiB,cAAAO,qBAAA,uBAA5BA,qBAAA,CAA8BN,QAAQ,CAAC,CAAC;MACrE;IACF,CAAC,CACD,OAAOQ,KAAK,EACZ;MACEV,QAAQ,CAACP,UAAU,CAAC,KAAK,CAAC,CAAC;MAC3BI,KAAK,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;QACzBC,QAAQ,EAAEf,KAAK,CAACgB,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAO;IAACb;EAAiB,CAAC;AAC5B;AAACF,EAAA,CA3BeD,oBAAoB;EAAA,QAEjBR,WAAW;AAAA;AA2B9B,OAAO,SAASyB,iBAAiBA,CAAA,EAAG;EAAAC,GAAA;EAClC,MAAMhB,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAM2B,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFjB,QAAQ,CAACP,UAAU,CAAC,IAAI,CAAC,CAAC;MAC1B,MAAMU,GAAG,GAAG,MAAMZ,MAAM,CAAC2B,KAAK,CAAC;QAC7BA,KAAK,EAAEvB;MACT,CAAC,CAAC;MAEFK,QAAQ,CAACP,UAAU,CAAC,KAAK,CAAC,CAAC;MAC3B,IAAIU,GAAG,EAAE;QAAA,IAAAgB,UAAA;QACPnB,QAAQ,CAACR,cAAc,CAACW,GAAG,aAAHA,GAAG,wBAAAgB,UAAA,GAAHhB,GAAG,CAAEM,IAAI,cAAAU,UAAA,uBAATA,UAAA,CAAWC,cAAc,CAAC,CAAC;MACrD;IACF,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdV,QAAQ,CAACP,UAAU,CAAC,KAAK,CAAC,CAAC;MAC3BI,KAAK,CAACa,KAAK,CAACA,KAAK,CAACC,OAAO,EAAE;QACzBC,QAAQ,EAAEf,KAAK,CAACgB,QAAQ,CAACC;MAC3B,CAAC,CAAC;IACJ;EACF,CAAC;EACD,OAAO;IAAEG;EAAe,CAAC;AAC3B;AAACD,GAAA,CArBeD,iBAAiB;EAAA,QACdzB,WAAW;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}