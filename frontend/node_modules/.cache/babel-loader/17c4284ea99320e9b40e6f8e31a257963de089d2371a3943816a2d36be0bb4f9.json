{"ast":null,"code":"var _jsxFileName = \"/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/components/tags/SingleTag.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../../assets/css/OtherTag.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleTag = ({\n  singleTag\n}) => {\n  _s();\n  var _singleTag$question;\n  console.log(\"singleTag\", singleTag);\n  const navigate = useNavigate();\n  function truncateTextToWords(text, wordCount) {\n    const words = text.split(' ');\n    const truncatedText = words.slice(0, wordCount).join(' ');\n    return truncatedText;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singleTag m-lg-2 mt-3 me-3 ps-2 pe-2 pt-2 pb-2 d-flex flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleTagBox\",\n      onClick: () => {\n        navigate(\"/tags/javascript\");\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ps-2 pe-2 pt-1 pb-1 mb-0\",\n        children: singleTag === null || singleTag === void 0 ? void 0 : singleTag.TagName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleText mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-0\",\n        children: [truncateTextToWords(singleTag === null || singleTag === void 0 ? void 0 : singleTag.body, 15), \"...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singleQuestionTag mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: singleTag === null || singleTag === void 0 ? void 0 : (_singleTag$question = singleTag.question) === null || _singleTag$question === void 0 ? void 0 : _singleTag$question.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), \" questions\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleTag, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SingleTag;\nexport default SingleTag;\nvar _c;\n$RefreshReg$(_c, \"SingleTag\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","SingleTag","singleTag","_s","_singleTag$question","console","log","navigate","truncateTextToWords","text","wordCount","words","split","truncatedText","slice","join","className","children","onClick","TagName","fileName","_jsxFileName","lineNumber","columnNumber","body","question","length","_c","$RefreshReg$"],"sources":["/Users/vanshamaggarwal/Documents/GitHub/QueryOverflow/frontend/src/components/tags/SingleTag.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../../assets/css/OtherTag.css\";\nimport { useNavigate } from \"react-router-dom\";\nconst SingleTag = ({ singleTag }) => {\n  console.log(\"singleTag\", singleTag);\n  const navigate = useNavigate();\n  \n  function truncateTextToWords(text, wordCount) {\n    const words = text.split(' ');\n    const truncatedText = words.slice(0, wordCount).join(' ');\n    return truncatedText;\n  }\n  \n  return (\n    <div className=\"singleTag m-lg-2 mt-3 me-3 ps-2 pe-2 pt-2 pb-2 d-flex flex-column\">\n      <div\n        className=\"singleTagBox\"\n        onClick={() => {\n          navigate(\"/tags/javascript\");\n        }}\n      >\n        <p className=\"ps-2 pe-2 pt-1 pb-1 mb-0\">{singleTag?.TagName}</p>\n      </div>\n      <div className=\"singleText mt-2\">\n        <p className=\"mb-0\">\n          {truncateTextToWords(singleTag?.body, 15)}...\n        </p>\n      </div>\n      <div className=\"singleQuestionTag mt-2\">\n        <b>{singleTag?.question?.length}</b> questions\n      </div>\n    </div>\n  );\n};\n\nexport default SingleTag;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,+BAA+B;AACtC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAAA,IAAAC,mBAAA;EACnCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,SAAS,CAAC;EACnC,MAAMK,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,SAASU,mBAAmBA,CAACC,IAAI,EAAEC,SAAS,EAAE;IAC5C,MAAMC,KAAK,GAAGF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;IAC7B,MAAMC,aAAa,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,EAAEJ,SAAS,CAAC,CAACK,IAAI,CAAC,GAAG,CAAC;IACzD,OAAOF,aAAa;EACtB;EAEA,oBACEb,OAAA;IAAKgB,SAAS,EAAC,mEAAmE;IAAAC,QAAA,gBAChFjB,OAAA;MACEgB,SAAS,EAAC,cAAc;MACxBE,OAAO,EAAEA,CAAA,KAAM;QACbX,QAAQ,CAAC,kBAAkB,CAAC;MAC9B,CAAE;MAAAU,QAAA,eAEFjB,OAAA;QAAGgB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAEf,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEiB;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACNvB,OAAA;MAAKgB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9BjB,OAAA;QAAGgB,SAAS,EAAC,MAAM;QAAAC,QAAA,GAChBT,mBAAmB,CAACN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEsB,IAAI,EAAE,EAAE,CAAC,EAAC,KAC5C;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNvB,OAAA;MAAKgB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,gBACrCjB,OAAA;QAAAiB,QAAA,EAAIf,SAAS,aAATA,SAAS,wBAAAE,mBAAA,GAATF,SAAS,CAAEuB,QAAQ,cAAArB,mBAAA,uBAAnBA,mBAAA,CAAqBsB;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,cACtC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BIF,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAA6B,EAAA,GAFxB1B,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}